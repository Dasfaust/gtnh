options.button.shader=Shaders...

options.chunks=%s chunks
options.entityShadows=Sombras de Entidades
sodium.option_impact.low=Bajo
sodium.option_impact.medium=Medio
sodium.option_impact.high=Alto
sodium.option_impact.extreme=Extremo
sodium.option_impact.varies=Varía
sodium.options.pages.quality=Calidad
sodium.options.pages.performance=Rendimiento
sodium.options.pages.advanced=Avanzado
sodium.options.view_distance.tooltip=La distancia de renderizado controla que tan lejos se renderizará el terreno. Distancias más cortas significa que menos terreno sera renderizado, mejorando la tasa de fotogramas.
sodium.options.simulation_distance.tooltip=La distancia de simulación controla que tan lejos se cargará y tickeará el terreno y las entidades. Distancias más cortas pueden reducir la carga en el servidor interno y puede mejorar la tasa de fotogramas.
sodium.options.brightness.tooltip=Controla el brillo (gamma) del juego.
sodium.options.clouds.name=Nubes
sodium.options.clouds.tooltip=Controla si las nubes serán o no visibles.
sodium.options.gui_scale.tooltip=Establece el factor de escala maximo que se utilizará para la interfaz del usuario. Si se usa "auto", entonces el factor más grande siempre se ocupará.
sodium.options.fullscreen.tooltip=Si se habilita, el juego se mostrará en pantalla completa (si es compatible).
sodium.options.v_sync.tooltip=Si se habilita, la velocidad de fotogramas del juego será sincronizada a la velocidad de refresco del monitor, lo que brindará una experiencia generalmente mas suave a expensas de la latencia de control general. Esta configuración puede reducir rendimiento si su sistema es muy lento.
sodium.options.fps_limit.tooltip=Limita el número máximo de fotogramas por segundo. Esto puede ayudar a reducir uso de batería y carga general del sistema al estar haciendo multiples tareas. Si V-Sync esta activado, esta opción va a ser ignorada a menos de que sea más bajo que tu velocidad de fotogramas de tu monitor.
sodium.options.view_bobbing.tooltip=Si se activa, la vista del jugador se mecerá y botará al moverse. Jugadores que sienten mareo por movimiento al jugar puede que les sirva desactivar esta opción.
sodium.options.attack_indicator.tooltip=Controla donde el Indicador de Ataque se muestra en pantalla.
sodium.options.autosave_indicator.tooltip=Si se activa, un indicador se mostrará cuando el juego esta guardando el mundo al disco.
sodium.options.graphics_quality.tooltip=Los controles de calidad grafica por defecto controlan algunas opciones heredadas y es necesario para la compatibilidad con mods. Si las opciones abajo se dejan en "Default", ellas usaran esta configuración.
sodium.options.clouds_quality.tooltip=Controla la calidad de nubes renderizadas en el cielo.
sodium.options.weather_quality.tooltip=Controla la calidad de la lluvia y efectos de nieve.
sodium.options.leaves_quality.name=Calidad de Hojas
sodium.options.leaves_quality.tooltip=Controla la calidad de hojas.
sodium.options.grass_quality.name=Calidad de Césped
sodium.options.grass_quality.tooltip=Controla la calidad de los lados de los bloques de césped.
sodium.options.particle_quality.name=Calidad de Partículas
sodium.options.particle_quality.tooltip=Controla el número máximo de partículas que pueden estar presentes en pantalla en cualquier momento.
sodium.options.smooth_lighting.tooltip=Controla si los bloques se iluminaran y sombrearan suavemente. Esto ligeramente aumenta el tiempo que se necesita para reconstruir un chunk, pero no afecta a la velocidad de fotogramas.
sodium.options.biome_blend.value=%s bloque(s)
sodium.options.biome_blend.tooltip=Controla el rango en cual biomas se muestrearán para la coloración de bloques. Valores más altos aumentan considerablemente el tiempo que se necesita para construir chunks para lograr mejoras decrecientes en calidad.
sodium.options.entity_distance.tooltip=Controla cómo de lejos se pueden renderizar entidades desde el jugador. Valores más altos incrementan la distancia de renderizado a expensas de los FPS.
sodium.options.entity_shadows.tooltip=Si se activa, sombras básicas serán renderizadas bajo mobs y otras entidades.
sodium.options.vignette.name=Viñeta
sodium.options.vignette.tooltip=Si se activa, un efecto de viñeta sera renderizado en la vista del jugador. Es muy poco probable que esto marque una diferencia en las velocidades de fotogramas a menos de que tengas una tasa de relleno limitada.
sodium.options.mipmap_levels.tooltip=Controls the number of mipmaps which will be used for block model textures. Higher values provide better rendering of blocks in the distance, but may adversely affect performance with many animated textures.
sodium.options.use_chunk_multidraw.name=Use Chunk Multi-Draw
sodium.options.use_chunk_multidraw.tooltip=Multi-draw allows multiple chunks to be rendered with fewer draw calls, greatly reducing CPU overhead when rendering the world while also potentially allowing for more efficient GPU utilization. This optimization may cause issues with some graphics drivers, so you should try disabling it if you are experiencing glitches.
sodium.options.use_vertex_objects.name=Use Vertex Array Objects
sodium.options.use_vertex_objects.tooltip=Helps to improve performance by moving information about how vertex data should be rendered into the driver, allowing it to better optimize for repeated rendering of the same objects. There is generally no reason to disable this unless you're using incompatible mods.
sodium.options.use_block_face_culling.name=Use Block Face Culling
sodium.options.use_block_face_culling.tooltip=If enabled, only the sides of blocks which are facing the camera will be submitted for rendering. This can eliminate a large number of block faces very early in the rendering process, saving memory bandwidth and time on the GPU. Some resource packs may have issues with this option, so try disabling it if you're seeing holes in blocks.
sodium.options.use_compact_vertex_format.name=Use Compact Vertex Format
sodium.options.use_compact_vertex_format.tooltip=If enabled, a more compact vertex format will be used for rendering chunks. This can reduce graphics memory usage and bandwidth requirements significantly, especially for integrated graphics cards, but can cause z-fighting with some resource packs due to how it reduces the precision of position and texture coordinate attributes.
sodium.options.use_fog_occlusion.name=Use Fog Occlusion
sodium.options.use_fog_occlusion.tooltip=If enabled, chunks which are determined to be fully hidden by fog effects will not be rendered, helping to improve performance. The improvement can be more dramatic when fog effects are heavier (such as while underwater), but it may cause undesirable visual artifacts between the sky and fog in some scenarios.
sodium.options.use_entity_culling.name=Use Entity Culling
sodium.options.use_entity_culling.tooltip=If enabled, entities determined not to be in any visible chunks will be skipped during rendering. This can help improve performance by avoiding the rendering of entities located underground or behind walls.
sodium.options.use_particle_culling.name=Use Particle Culling
sodium.options.use_particle_culling.tooltip=If enabled, only particles which are determined to be visible will be rendered. This can provide a significant improvement to frame rates when many particles are nearby.
sodium.options.animate_only_visible_textures.name=Animate Only Visible Textures
sodium.options.animate_only_visible_textures.tooltip=If enabled, only animated textures determined to be visible will be updated. This can provide a significant boost to frame rates on some hardware, especially with heavier resource packs. If you experience issues with some textures not being animated, try disabling this option.
sodium.options.translucency_sorting.name=Translucency Sorting
sodium.options.translucency_sorting.tooltip=If enabled, translucent blocks will be sorted correctly from back to front to provide better rendering, especially when multiple translucent blocks are in view and layered.  This is a bit of an expensive operation.
sodium.options.cpu_render_ahead_limit.name=CPU Render-Ahead Limit
sodium.options.cpu_render_ahead_limit.tooltip=Specifies the maximum number of frames the CPU can be waiting on the GPU to finish rendering. Very low or high values may create frame rate instability.
sodium.options.cpu_render_ahead_limit.value=%s frame(s)
sodium.options.allow_direct_memory_access.name=Allow Direct Memory Access
sodium.options.allow_direct_memory_access.tooltip=If enabled, some critical code paths will be allowed to use direct memory access for performance. This often greatly reduces CPU overhead for chunk and entity rendering, but can make it harder to diagnose some bugs and crashes. You should only disable this if you've been asked to or otherwise know what you're doing.
sodium.options.ignore_driver_blacklist.name=Ignore Driver Blacklist
sodium.options.ignore_driver_blacklist.tooltip=If enabled, known incompatibilities with your hardware/driver configuration will be ignored, allowing you to enable options that may cause issues with your game. You should generally not touch this option unless you know exactly what you are doing. After changing this option, you must save, close, and then re-open the settings screen.
sodium.options.enable_memory_tracing.name=Enable Memory Tracing
sodium.options.enable_memory_tracing.tooltip=Debugging feature. If enabled, stack traces will be collected alongside memory allocations to help improve diagnostic information when memory leaks are detected.
sodium.options.performance_impact_string=Performance Impact: %s
sodium.options.use_persistent_mapping.name=Use Persistent Mapping
sodium.options.use_persistent_mapping.tooltip=If enabled, a small amount of memory will be persistently mapped for speeding up chunk updates and entity rendering.\n\nRequires OpenGL 4.4 or ARB_buffer_storage.
sodium.options.chunk_memory_allocator.name=Chunk Memory Allocator
sodium.options.chunk_memory_allocator.tooltip=Selects the memory allocator that will be used for chunk rendering.\n- ASYNC: Fastest option, works well with most modern graphics drivers.\n- SWAP: Fallback option for older graphics drivers. May increase memory usage significantly.
sodium.options.chunk_memory_allocator.async=Async
sodium.options.chunk_memory_allocator.swap=Swap
sodium.options.chunk_update_threads.name=Chunk Update Threads
sodium.options.chunk_update_threads.tooltip=Specifies the number of threads to use for chunk building. Using more threads can speed up chunk loading and update speed, but may negatively impact frame times.
sodium.options.always_defer_chunk_updates.name=Always Defer Chunk Updates
sodium.options.always_defer_chunk_updates.tooltip=If enabled, rendering will never wait for chunk updates to finish, even if they are important. This can greatly improve frame rates in some scenarios, but it may create significant visual lag in the world.
sodium.options.use_no_error_context.name=Use No Error Context
sodium.options.use_no_error_context.tooltip=If enabled, the OpenGL context will be created with error checking disabled. This may slightly improve performance, but it also increases the risk that the game will crash instead of gracefully handling OpenGL errors. You should disable this option if you are experiencing sudden unexplained crashes.
sodium.options.use_gl_state_cache.name=Use GL State Cache
sodium.options.use_gl_state_cache.tooltip=If enabled, the OpenGL state cache will be used to reduce the number of redundant state changes. This can improve performance, but it may also cause issues with some mods.  Does not persist across game restarts.
sodium.options.threads.value=%s thread(s)
sodium.options.default=Default
sodium.options.buttons.undo=Undo
sodium.options.buttons.apply=Apply
sodium.options.buttons.donate=Buy coffee for JellySquid!
options.dynamic_fov=Dynamic FOV
options.dynamic_fov.tooltip=If enabled, the game's field of view will change based on the player's speed.
options.framerate=%s FPS
iris.shaders.toggled=Toggled shaders to %s!
iris.shaders.disabled=Shaders disabled!
options.iris.apply=Apply
options.iris.refresh=Refresh
options.iris.openShaderPackFolder=Open Shader Pack Folder...
options.iris.shaderPackSettings=Shader Pack Settings...
options.iris.shaderPackList=Shader Pack List...
options.iris.refreshShaderPacks=Refresh Shader Packs
options.iris.shaderPackSelection=Shader Packs...
options.iris.shaderPackSelection.title=Shader Packs
options.iris.shaderPackSelection.addedPack=Added Shader Pack "%s"
options.iris.shaderPackSelection.addedPacks=Added %s Shader Packs
options.iris.shaderPackSelection.failedAdd=Files were not valid Shader Packs
options.iris.shaderPackSelection.failedAddSingle="%s" is not a valid Shader Pack
options.iris.shaderPackSelection.copyError=Could not add Shader Pack "%s"
options.iris.shaderPackSelection.copyErrorAlreadyExists="%s" is already in your Shader Packs folder!
options.iris.shaderPackOptions.tooManyFiles=Cannot import multiple Shader Settings files!
options.iris.shaderPackOptions.failedImport=Failed to import Shader Settings file "%s"
options.iris.shaderPackOptions.importedSettings=Imported Shader Settings from "%s"
options.iris.shaders.disabled=Shaders: Disabled
options.iris.shaders.enabled=Shaders: Enabled
options.iris.shaders.nonePresent=Shaders: No Packs Present
options.iris.back=Back
options.iris.reset=Reset
options.iris.reset.tooltip=Reset ALL options and apply?
options.iris.reset.tooltip.holdShift=Hold SHIFT and click to reset
options.iris.importSettings.tooltip=Import settings from file
options.iris.exportSettings.tooltip=Export applied settings to file
options.iris.mustDisableFullscreen=Please disable fullscreen first!
options.iris.setToDefault=Set option to default value?
options.iris.profile=Profile
options.iris.profile.custom=Custom
options.iris.shadowDistance=Max Shadow Distance
options.iris.shadowDistance.enabled=Allows you to change the maximum distance for shadows. Terrain and entities beyond this distance will not cast shadows. Lowering the shadow distance can significantly increase performance.
options.iris.shadowDistance.disabled=Your current shader pack has already set a render distance for shadows; you cannot change it.
options.iris.gui.hide=Hide GUI
options.iris.gui.show=Show GUI
pack.iris.select.title=Select
pack.iris.configure.title=Configure
label.iris.true=Encendido
label.iris.false=Apagado